exec-once = uwsm-app $(python /home/soh4m/.config/Ax-Shell/main.py)
exec = pgrep -x "hypridle" > /dev/null || uwsm app -- hypridle
exec = uwsm app -- swww-daemon
exec-once =  wl-paste --type text --watch cliphist store
exec-once =  wl-paste --type image --watch cliphist store

# Start battery monitoring script
exec-once = chmod +x ~/.config/Ax-Shell/scripts/battery-monitor.sh && ~/.config/Ax-Shell/scripts/battery-monitor.sh

$fabricSend = fabric-cli exec ax-shell
$axMessage = notify-send "Axenide" "FIRE IN THE HOLE‼️🗣️🔥🕳️" -i "/home/soh4m/.config/Ax-Shell/assets/ax.png" -A "🗣️" -A "🔥" -A "🕳️" -a "Source Code"

# Custom user keybinds
bind = SUPER, B, exec, firefox # Firefox Browser
bind = SUPER, 1, workspace, 1 # Switch to workspace 1
bind = SUPER, 2, workspace, 2 # Switch to workspace 2
bind = SUPER, 3, workspace, 3 # Switch to workspace 3
bind = SUPER, 4, workspace, 4 # Switch to workspace 4
bind = SUPER, 5, workspace, 5 # Switch to workspace 5
bind = SUPER, 6, workspace, 6 # Switch to workspace 6
bind = SUPER, 7, workspace, 7 # Switch to workspace 7
bind = SUPER, 8, workspace, 8 # Switch to workspace 8
bind = SUPER, 9, workspace, 9 # Switch to workspace 9
bind = SUPER, 0, workspace, 10 # Switch to workspace 10
bind = CTRL SHIFT, S, exec, grimblast copy area # Screenshot capture
bind = SUPER, W, killactive, # Close active window
bind = SUPER, F, fullscreen, 1 # Toggle fullscreen
bind = SUPER, E, exec, nautilus # File explorer
bind = SUPER SHIFT, 1, movetoworkspace, 1 # Move to workspace 1
bind = SUPER SHIFT, 2, movetoworkspace, 2 # Move to workspace 2
bind = SUPER SHIFT, 3, movetoworkspace, 3 # Move to workspace 3
bind = SUPER SHIFT, 4, movetoworkspace, 4 # Move to workspace 4
bind = SUPER SHIFT, 5, movetoworkspace, 5 # Move to workspace 5
bind = SUPER SHIFT, 6, movetoworkspace, 6 # Move to workspace 6
bind = SUPER SHIFT, 7, movetoworkspace, 7 # Move to workspace 7
bind = SUPER SHIFT, 8, movetoworkspace, 8 # Move to workspace 8
bind = SUPER SHIFT, 9, movetoworkspace, 9 # Move to workspace 9
bind = SUPER SHIFT, 0, movetoworkspace, 10 # Move to workspace 10
bind = SUPER, G, exec, nm-connection-editor # Network Settings

# Window navigation with SUPER + arrow keys
bind = SUPER, left, movefocus, l    # Move focus to left window
bind = SUPER, right, movefocus, r   # Move focus to right window  
bind = SUPER, up, movefocus, u      # Move focus to upper window
bind = SUPER, down, movefocus, d    # Move focus to lower window

# Window minimize and restore keybinds
bind = SUPER, M, movetoworkspacesilent, special:minimized # Minimize window
bind = SUPER SHIFT, M, togglespecialworkspace, minimized # Toggle minimized windows view

# Mouse bindings for window management
bindm = SUPER, mouse:272, movewindow    # Move window with SUPER + left mouse button
bindm = SUPER, mouse:273, resizewindow  # Resize window with SUPER + right mouse button

# VS Code launcher
bind = SUPER SHIFT, R, exec, code       # Open VS Code

# Window resizing with SUPER + CTRL + arrow keys
bind = SUPER CTRL, left, resizeactive, -50 0   # Resize window left
bind = SUPER CTRL, right, resizeactive, 50 0   # Resize window right
bind = SUPER CTRL, up, resizeactive, 0 -50     # Resize window up
bind = SUPER CTRL, down, resizeactive, 0 50    # Resize window down

# Window moving with SUPER + ALT + arrow keys
bind = SUPER ALT, left, moveactive, -50 0      # Move window left
bind = SUPER ALT, right, moveactive, 50 0      # Move window right
bind = SUPER ALT, up, moveactive, 0 -50        # Move window up
bind = SUPER ALT, down, moveactive, 0 50       # Move window down

bind = SUPER, EQUAL, exec, $fabricSend 'notch.open_notch("calculator")' # Calculator

bind = SUPER SHIFT, I, exec, hyprpicker -a # Direct color picker to clipboard
bind = SUPER, L, exec, hyprlock # Lock Screen
bind = SUPER CTRL, S, exec, systemctl suspend # Suspend

# Ax-Shell keybinds (moved Bluetooth to Y to avoid conflict)
bind = SUPER ALT, B, exec, killall ax-shell; uwsm-app $(python /home/soh4m/.config/Ax-Shell/main.py) # Reload Ax-Shell

# Battery status check (SUPER + A)
bind = SUPER, A, exec, bash -c 'POWER_MODE_FILE="/tmp/ax_power_mode"; MANUAL_MODE_FILE="/tmp/ax_manual_power_mode"; BATTERY_PATH="/sys/class/power_supply/BAT*"; CAPACITY=$(cat $BATTERY_PATH/capacity 2>/dev/null || echo "0"); STATUS=$(cat $BATTERY_PATH/status 2>/dev/null || echo "Unknown"); if [ -f "$POWER_MODE_FILE" ]; then CURRENT_MODE=$(cat "$POWER_MODE_FILE"); else CURRENT_MODE="performance"; fi; if [ -f "$MANUAL_MODE_FILE" ]; then MODE_SOURCE="Manual"; else MODE_SOURCE="Auto"; fi; case "$CURRENT_MODE" in "performance") ICON="battery-good"; MODE_TEXT="Performance Mode";; "powersave") ICON="battery-low"; MODE_TEXT="Power Saving";; "ultra-powersave") ICON="battery-caution"; MODE_TEXT="Ultra Power Saving";; "disabled") ICON="battery-full"; MODE_TEXT="Power Saving Disabled";; *) ICON="battery"; MODE_TEXT="Unknown Mode";; esac; notify-send "Power Status" "$MODE_TEXT ($MODE_SOURCE) | Battery: ${CAPACITY}%" -i "$ICON" -a "System" -u normal'

bind = SUPER, D, exec, $fabricSend 'notch.open_notch("dashboard")' # Dashboard
bind = SUPER, Y, exec, $fabricSend 'notch.open_notch("bluetooth")' # Bluetooth
#bind = SUPER, Q, exec, $fabricSend 'notch.open_notch("pins")' # Pins
bind = SUPER, N, exec, $fabricSend 'notch.dashboard.widgets.buttons.night_mode_button.toggle_hyprsunset()' # Toggle Night Mode
bind = SUPER, K, exec, $fabricSend 'notch.open_notch("kanban")' # Kanban (moved from N to K)
bind = SUPER, R, exec, $fabricSend 'notch.open_notch("launcher")' # App Launcher
bind = SUPER, T, exec, alacritty# Tmux
bind = SUPER, V, exec, $fabricSend 'notch.open_notch("cliphist")' # Clipboard History
bind = SUPER, S, exec, $fabricSend 'notch.open_notch("tools")' # Toolbox
bind = SUPER, TAB, exec, $fabricSend 'notch.open_notch("overview")' # Overview
bind = SUPER, COMMA, exec, $fabricSend 'notch.open_notch("wallpapers")' # Wallpapers
bind = SUPER SHIFT, COMMA, exec, $fabricSend 'notch.dashboard.wallpapers.set_random_wallpaper(None, external=True)' # Random Wallpaper
bind = SUPER, PERIOD, exec, $fabricSend 'notch.open_notch("emoji")' # Emoji Picker
bind = SUPER, ESCAPE, exec, $fabricSend 'notch.open_notch("power")' # Power Menu
bind = SUPER SHIFT, C, exec, $fabricSend 'notch.dashboard.widgets.buttons.caffeine_button.toggle_inhibit(external=True)' # Toggle Caffeine
bind = SUPER SHIFT, B, exec, $fabricSend 'app.set_css()' # Reload CSS
bind = SUPER CTRL ALT, B, exec, killall ax-shell; uwsm-app $(GTK_DEBUG=interactive python /home/soh4m/.config/Ax-Shell/main.py) # Restart with inspector

# FIXED POWER MODE CONTROLS
# Manual power mode controls with persistent override
bind = SUPER, P, exec, bash -c 'echo "powersave" > /tmp/ax_manual_power_mode && echo "powersave" | sudo tee /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor > /dev/null && command -v brightnessctl > /dev/null && brightnessctl set 50% > /dev/null 2>&1; notify-send "Power Mode" "Power Saving Active (Manual)" -i "battery-low" -a "System"'

bind = SUPER ALT, P, exec, bash -c 'echo "ultra-powersave" > /tmp/ax_manual_power_mode && echo "powersave" | sudo tee /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor > /dev/null && for cpu in {1..3}; do echo 0 | sudo tee /sys/devices/system/cpu/cpu$cpu/online > /dev/null 2>&1; done && command -v brightnessctl > /dev/null && brightnessctl set 20% > /dev/null 2>&1; notify-send "Power Mode" "Ultra Power Saving Active (Manual)" -i "battery-caution" -a "System"'

bind = SUPER SHIFT, P, exec, bash -c 'echo "performance" > /tmp/ax_manual_power_mode && echo "performance" | sudo tee /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor > /dev/null && for cpu in {1..7}; do echo 1 | sudo tee /sys/devices/system/cpu/cpu$cpu/online > /dev/null 2>&1; done && command -v brightnessctl > /dev/null && brightnessctl set 80% > /dev/null 2>&1; notify-send "Power Mode" "Performance Mode Active (Manual)" -i "battery-good" -a "System"'

# Disable power saving modes (always performance) - FIXED keybind
bind = SUPER CTRL ALT, P, exec, bash -c 'echo "disabled" > /tmp/ax_manual_power_mode && echo "performance" | sudo tee /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor > /dev/null && for cpu in {1..7}; do echo 1 | sudo tee /sys/devices/system/cpu/cpu$cpu/online > /dev/null 2>&1; done && command -v brightnessctl > /dev/null && brightnessctl set 80% > /dev/null 2>&1; notify-send "Power Mode" "Power Saving Disabled (Manual)" -i "battery-full" -a "System"'

# Return to automatic mode - FIXED keybind
bind = SUPER CTRL SHIFT, P, exec, bash -c 'rm -f /tmp/ax_manual_power_mode && notify-send "Power Mode" "Automatic Mode Enabled" -i "battery" -a "System"'

# Wallpapers directory: /home/soh4m/.config/Ax-Shell/assets/wallpapers_example

source = /home/soh4m/.config/Ax-Shell/config/hypr/colors.conf

layerrule = noanim, fabric

exec = cp $wallpaper ~/.current.wall

general {
    col.active_border = rgb($primary)
    col.inactive_border = rgb($surface)
    gaps_in = 2
    gaps_out = 4
    border_size = 2
    layout = dwindle
}

cursor {
  no_warps=true
}

decoration {
    blur {
        enabled = yes
        size = 5
        passes = 3
        new_optimizations = yes
        contrast = 1
        brightness = 1
    }
    rounding = 14
    shadow {
      enabled = true
      range = 10
      render_power = 2
      color = rgba(0, 0, 0, 0.25)
    }
}

animations {
    enabled = yes
    bezier = myBezier, 0.4, 0.0, 0.2, 1.0
    animation = windows, 1, 2.5, myBezier, popin 80%
    animation = border, 1, 2.5, myBezier
    animation = fade, 1, 2.5, myBezier
    animation = workspaces, 1, 2.5, myBezier, slidefade 20%
}
